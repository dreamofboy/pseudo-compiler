use crate::lexer::tokens::Token;

use std::iter::Peekable;
use std::vec::IntoIter;

type TokenIter = Peekable<IntoIter<Token>>;

/// An RDP (Recursive Descent Parser) which generates an AST (Abstract Syntax Tree)
pub struct Parser {
    /// [`Token`] Iterator generated by the [`Lexer`].
    ///
    /// [`Token`]: ../lexer/tokens/enum.Token.html
    /// [`Lexer`]: ../lexer/struct.Lexer.html
    pub tokens: TokenIter,
}

impl Parser {
    pub fn new(tokens: TokenIter) -> Self {
        Parser {
            tokens,
        }
    }
}
